{"uid":"f960eff0da7dc26","name":"test_login[111-111-Password must be valid (Between 8 - 32 characters)]","fullName":"test_cases.test_login.TestLogin#test_login","historyId":"2f84b624a43b4ac45af7ecfb066d4917","time":{"start":1738862016045,"stop":1738862016588,"duration":543},"description":"测试登录接口","descriptionHtml":"<p>测试登录接口</p>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 'Password must be valid (Between 8 - 32 characters)'\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <test_cases.test_login.TestLogin object at 0x00000250A1420CD0>\nclient = <untils.http_requests.HTTPClient object at 0x00000250A1454130>\nusername = 111, password = 111\nassert_message = 'Password must be valid (Between 8 - 32 characters)'\n\n    @pytest.mark.parametrize(\"username, password, assert_message\",all_case)\n    def test_login(self, client, username, password, assert_message):\n        \"\"\"测试登录接口\"\"\"\n        endpoint = \"/login\"\n        payload = {\n            \"username\": username,\n            \"password\": password\n        }\n    \n        logger.info(f\"Testing login with {username}/{password}\")\n        response = client.post(endpoint, json=payload)\n>       assert response.status_code == assert_message\nE       AssertionError: assert 400 == 'Password must be valid (Between 8 - 32 characters)'\nE        +  where 400 = <Response [400]>.status_code\n\ntest_cases\\test_login.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"client","time":{"start":1738862010723,"stop":1738862010725,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"测试登录接口","status":"failed","statusMessage":"AssertionError: assert 400 == 'Password must be valid (Between 8 - 32 characters)'\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <test_cases.test_login.TestLogin object at 0x00000250A1420CD0>\nclient = <untils.http_requests.HTTPClient object at 0x00000250A1454130>\nusername = 111, password = 111\nassert_message = 'Password must be valid (Between 8 - 32 characters)'\n\n    @pytest.mark.parametrize(\"username, password, assert_message\",all_case)\n    def test_login(self, client, username, password, assert_message):\n        \"\"\"测试登录接口\"\"\"\n        endpoint = \"/login\"\n        payload = {\n            \"username\": username,\n            \"password\": password\n        }\n    \n        logger.info(f\"Testing login with {username}/{password}\")\n        response = client.post(endpoint, json=payload)\n>       assert response.status_code == assert_message\nE       AssertionError: assert 400 == 'Password must be valid (Between 8 - 32 characters)'\nE        +  where 400 = <Response [400]>.status_code\n\ntest_cases\\test_login.py:29: AssertionError","steps":[],"attachments":[{"uid":"d5c55c09a480cf02","name":"log","source":"d5c55c09a480cf02.txt","type":"text/plain","size":290},{"uid":"a8c841b225b95ced","name":"stderr","source":"a8c841b225b95ced.txt","type":"text/plain","size":339}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"client::0","time":{"start":1738862017977,"stop":1738862017977,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"DESKTOP-E1J5EHJ"},{"name":"thread","value":"19336-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"assert_message","value":"'Password must be valid (Between 8 - 32 characters)'"},{"name":"password","value":"111"},{"name":"username","value":"111"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"f960eff0da7dc26.json","parameterValues":["'Password must be valid (Between 8 - 32 characters)'","111","111"]}