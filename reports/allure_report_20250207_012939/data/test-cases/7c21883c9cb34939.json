{"uid":"7c21883c9cb34939","name":"测试登录接口 - 用户名:   , 密码: d5eFYHi!PNf7Bk~","fullName":"test_cases.test_login.TestLogin#test_login","historyId":"05e3f88ba3c4d409479fd7e2d0b5b7fb","time":{"start":1738862454860,"stop":1738862455415,"duration":555},"description":"预期结果: Please limit the userName length to 3-64 characters","descriptionHtml":"<p>预期结果: Please limit the userName length to 3-64 characters</p>\n","status":"failed","statusMessage":"AssertionError: 预期状态码: Please limit the userName length to 3-64 characters, 实际状态码: 400\nassert 400 == 'Please limit the userName length to 3-64 characters'\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <test_cases.test_login.TestLogin object at 0x000002548F6FB640>\nclient = <untils.http_requests.HTTPClient object at 0x000002548F6FB040>\nusername = '  ', password = 'd5eFYHi!PNf7Bk~'\nassert_message = 'Please limit the userName length to 3-64 characters'\n\n    @pytest.mark.parametrize(\"username, password, assert_message\", all_case)\n    def test_login(self, client, username, password, assert_message):\n        \"\"\"\n        测试登录接口\n        :param client: HTTP 客户端\n        :param username: 账号名\n        :param password: 密码\n        :param assert_message: 预期结果\n        \"\"\"\n        # 动态设置 Allure 报告的标题和描述\n        allure.dynamic.title(f\"测试登录接口 - 用户名: {username}, 密码: {password}\")\n        allure.dynamic.description(f\"预期结果: {assert_message}\")\n    \n        endpoint = \"/login\"\n        payload = {\n            \"username\": username,\n            \"password\": password\n        }\n    \n        # 记录日志\n        logger.info(f\"Testing login with {username}/{password}\")\n    \n        # 发送请求\n        with allure.step(\"发送登录请求\"):\n            response = client.post(endpoint, json=payload)\n            logger.info(f\"响应状态码: {response.status_code}\")\n    \n        # 验证响应\n        with allure.step(\"验证响应\"):\n>           assert response.status_code == assert_message, f\"预期状态码: {assert_message}, 实际状态码: {response.status_code}\"\nE           AssertionError: 预期状态码: Please limit the userName length to 3-64 characters, 实际状态码: 400\nE           assert 400 == 'Please limit the userName length to 3-64 characters'\nE            +  where 400 = <Response [400]>.status_code\n\ntest_cases\\test_login.py:50: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"client","time":{"start":1738862451659,"stop":1738862451659,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"预期结果: Please limit the userName length to 3-64 characters","status":"failed","statusMessage":"AssertionError: 预期状态码: Please limit the userName length to 3-64 characters, 实际状态码: 400\nassert 400 == 'Please limit the userName length to 3-64 characters'\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <test_cases.test_login.TestLogin object at 0x000002548F6FB640>\nclient = <untils.http_requests.HTTPClient object at 0x000002548F6FB040>\nusername = '  ', password = 'd5eFYHi!PNf7Bk~'\nassert_message = 'Please limit the userName length to 3-64 characters'\n\n    @pytest.mark.parametrize(\"username, password, assert_message\", all_case)\n    def test_login(self, client, username, password, assert_message):\n        \"\"\"\n        测试登录接口\n        :param client: HTTP 客户端\n        :param username: 账号名\n        :param password: 密码\n        :param assert_message: 预期结果\n        \"\"\"\n        # 动态设置 Allure 报告的标题和描述\n        allure.dynamic.title(f\"测试登录接口 - 用户名: {username}, 密码: {password}\")\n        allure.dynamic.description(f\"预期结果: {assert_message}\")\n    \n        endpoint = \"/login\"\n        payload = {\n            \"username\": username,\n            \"password\": password\n        }\n    \n        # 记录日志\n        logger.info(f\"Testing login with {username}/{password}\")\n    \n        # 发送请求\n        with allure.step(\"发送登录请求\"):\n            response = client.post(endpoint, json=payload)\n            logger.info(f\"响应状态码: {response.status_code}\")\n    \n        # 验证响应\n        with allure.step(\"验证响应\"):\n>           assert response.status_code == assert_message, f\"预期状态码: {assert_message}, 实际状态码: {response.status_code}\"\nE           AssertionError: 预期状态码: Please limit the userName length to 3-64 characters, 实际状态码: 400\nE           assert 400 == 'Please limit the userName length to 3-64 characters'\nE            +  where 400 = <Response [400]>.status_code\n\ntest_cases\\test_login.py:50: AssertionError","steps":[{"name":"发送登录请求","time":{"start":1738862454861,"stop":1738862455415,"duration":554},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"验证响应","time":{"start":1738862455415,"stop":1738862455415,"duration":0},"status":"failed","statusMessage":"AssertionError: 预期状态码: Please limit the userName length to 3-64 characters, 实际状态码: 400\nassert 400 == 'Please limit the userName length to 3-64 characters'\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"D:\\projects\\API_autotest\\test_cases\\test_login.py\", line 50, in test_login\n    assert response.status_code == assert_message, f\"预期状态码: {assert_message}, 实际状态码: {response.status_code}\"\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"d242996150f14573","name":"log","source":"d242996150f14573.txt","type":"text/plain","size":357},{"uid":"960eac4fb97ecea9","name":"stderr","source":"960eac4fb97ecea9.txt","type":"text/plain","size":420}],"parameters":[],"stepsCount":2,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"client::0","time":{"start":1738862458352,"stop":1738862458352,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"登录接口"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"DESKTOP-E1J5EHJ"},{"name":"thread","value":"22560-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"assert_message","value":"'Please limit the userName length to 3-64 characters'"},{"name":"password","value":"'d5eFYHi!PNf7Bk~'"},{"name":"username","value":"'  '"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9900141a889b7588","status":"failed","statusDetails":"AssertionError: assert 400 == 'Please limit the userName length to 3-64 characters'\n +  where 400 = <Response [400]>.status_code","time":{"start":1738862014965,"stop":1738862015483,"duration":518}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7c21883c9cb34939.json","parameterValues":["'Please limit the userName length to 3-64 characters'","'d5eFYHi!PNf7Bk~'","'  '"]}