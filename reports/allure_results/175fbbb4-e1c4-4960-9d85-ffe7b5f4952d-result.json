{"name": "测试登录接口 - 用户名: admin, 密码: d5eFYHi!PNf3Bk~", "status": "failed", "statusDetails": {"message": "AssertionError: 预期状态码: 200, 实际状态码: 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_cases.test_login.TestLogin object at 0x0000018F1BAF0DF0>\nclient = <untils.http_requests.HTTPClient object at 0x0000018F19A0B220>\nusername = 'admin', password = 'd5eFYHi!PNf3Bk~', assert_message = 200\n\n    @pytest.mark.parametrize(\"username, password, assert_message\", all_case)\n    def test_login(self, client, username, password, assert_message):\n        \"\"\"\n        测试登录接口\n        :param client: HTTP 客户端\n        :param username: 账号名\n        :param password: 密码\n        :param assert_message: 预期结果\n        \"\"\"\n        # 动态设置 Allure 报告的标题和描述\n        allure.dynamic.title(f\"测试登录接口 - 用户名: {username}, 密码: {password}\")\n        allure.dynamic.description(f\"预期结果: {assert_message}\")\n    \n        endpoint = \"/login\"\n        payload = {\n            \"username\": username,\n            \"password\": password\n        }\n    \n        # 记录日志\n        logger.info(f\"Testing login with {username}/{password}\")\n    \n        # 发送请求\n        with allure.step(\"发送登录请求\"):\n            response = client.post(endpoint, json=payload)\n            logger.info(f\"响应状态码: {response.status_code}\")\n    \n        # 验证响应\n        with allure.step(\"验证响应\"):\n>           assert response.status_code == assert_message, f\"预期状态码: {assert_message}, 实际状态码: {response.status_code}\"\nE           AssertionError: 预期状态码: 200, 实际状态码: 400\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\ntest_cases\\test_login.py:50: AssertionError"}, "description": "预期结果: 200", "steps": [{"name": "发送登录请求", "status": "passed", "start": 1738862981207, "stop": 1738862982299}, {"name": "验证响应", "status": "failed", "statusDetails": {"message": "AssertionError: 预期状态码: 200, 实际状态码: 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"D:\\projects\\API_autotest\\test_cases\\test_login.py\", line 50, in test_login\n    assert response.status_code == assert_message, f\"预期状态码: {assert_message}, 实际状态码: {response.status_code}\"\n"}, "start": 1738862982299, "stop": 1738862982299}], "attachments": [{"name": "log", "source": "d02e7803-5410-4220-9d22-22546cfeeb20-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "17242f3d-ade1-482b-9a78-75ee2e9c286a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'admin'"}, {"name": "password", "value": "'d5eFYHi!PNf3Bk~'"}, {"name": "assert_message", "value": "200"}], "start": 1738862981206, "stop": 1738862982300, "uuid": "2dff8f93-afb9-443f-a57b-f7eb21fa9e37", "historyId": "9cd00e0fd02f32fb8197db471cd11b64", "testCaseId": "c1469246359ab4f6b8f59bb9203392dc", "fullName": "test_cases.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "登录接口"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-E1J5EHJ"}, {"name": "thread", "value": "18956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_login"}]}